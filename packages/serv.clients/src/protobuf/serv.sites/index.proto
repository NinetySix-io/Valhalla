syntax = "proto3";

package serv.sites;

import "google/protobuf/timestamp.proto";

service SitesService {
  // -----------------------------
  // SITE
  // -----------------------------
  rpc CreateSite(CreateSiteRequest) returns (CreateSiteResponse){}
  rpc GetSite(GetSiteRequest) returns (GetSiteResponse) {}
  rpc UpdateSite(UpdateSiteRequest) returns (UpdateSiteResponse) {}
  rpc GetSiteList(GetSiteListRequest) returns (GetSiteListResponse) {}
  rpc SuspendSite(SuspendSiteRequest) returns (SuspendSiteResponse) {}

  // -----------------------------
  // PAGE
  // -----------------------------
  rpc CreatePage(CreatePageRequest) returns (CreatePageResponse) {}
  rpc GetPageList(GetPageListRequest) returns (GetPageListResponse) {}
  rpc GetPage(GetPageRequest) returns (GetPageResponse) {}
  rpc UpdatePage(UpdatePageRequest) returns (UpdatePageResponse) {}
  rpc DeletePage(DeletePageRequest) returns (DeletePageResponse) {}
  rpc ArchivePage(ArchivePageRequest) returns (ArchivePageResponse) {}

  // -----------------------------
  // SECTION
  // -----------------------------
  rpc GetPageSection(GetPageSectionRequest) returns (GetPageSectionResponse) {}
  rpc GetPageSectionList(GetPageSectionListRequest) returns (GetPageSectionListResponse) {}
  rpc CreateSection(CreateSectionRequest) returns (CreateSectionResponse) {}
  rpc UpdateSectionHead(UpdateSectionHeadRequest) returns (UpdateSectionResponse) {}
  rpc UpdateSectionFormat(UpdateSectionFormatRequest) returns (UpdateSectionResponse) {}
  rpc DeleteSection(DeleteSectionRequest) returns (DeleteSectionResponse) {}
}

// -----------------------------
// ENUMS
// -----------------------------
enum SiteStatus {
  DEPLOYED = 0;
  PENDING = 1;
  SUSPENDED = 2;
}

enum EditStatus {
  ACTIVE = 0;
  DRAFT = 1;
  ARCHIVED = 2;
}

// -----------------------------
// Entity
// -----------------------------

message Page {
  string id = 1;
  string title = 2;
  optional string description = 3;
  string ownBy = 4;
  string site = 5;
  EditStatus status = 6;
  optional bool isLoneTitle = 7;
  string createdBy = 8;
  string updatedBy = 9;
  google.protobuf.Timestamp createdAt = 10;
  google.protobuf.Timestamp updatedAt = 11;
  optional string slug = 12;
}

message Site {
  string id = 1;
  string name = 2;
  string createdBy = 3;
  string updatedBy = 4;
  string ownBy = 5;
  SiteStatus status = 6;
  optional string url = 7;
  google.protobuf.Timestamp createdAt = 8;
  google.protobuf.Timestamp updatedAt = 9;
}

message SectionFormat {
  optional int32 rowsCount = 1;
  optional int32 columnGap = 2;
  optional int32 rowGap = 3;
}

message Section {
  string id = 1;
  string page = 2;
  string head = 3;
  SectionFormat format = 4;
  string updatedBy = 5;

  google.protobuf.Timestamp createdAt = 10;
  google.protobuf.Timestamp updatedAt = 11;
}

message SectionElementPlatform {
  int32 x = 1;
  int32 y = 2;
  int32 height = 3;
  int32 width = 4;
  bool isVisible = 5;
}

message SectionElement {
  string id = 1;
  SectionElementPlatform desktop = 2;
  optional SectionElementPlatform tablet = 3;
  optional SectionElementPlatform mobile = 4;

  google.protobuf.Timestamp createdAt = 10;
  google.protobuf.Timestamp updatedAt = 11;
}

// -----------------------------
// PAGE
// -----------------------------
message CreatePageRequest {
  string requestedUserId = 1;
  string ownerId = 2;
  string siteId = 3;
  optional string title = 4;
}

message CreatePageResponse {
  Page data = 1;
}

message GetPageRequest {
  string pageId = 1;
}

message GetPageResponse {
  optional Page data = 1;
}

message GetPageListRequest {
  string siteId = 1;
}

message GetPageListResponse {
  repeated Page data = 1;
}

message UpdatePageRequest {
  string requestedUserId = 1;
  string pageId = 2;
  optional string title = 3;
  optional string description = 4;
  optional bool isLoneTitle = 5;
}

message UpdatePageResponse {
  Page data = 1;
}

message DeletePageRequest {
  string requestedUserId = 1;
  string pageId = 2;
}

message DeletePageResponse {
  Page data = 1;
}

message ArchivePageRequest {
  string pageId = 1;
  string requestedUserId = 2;
}

message ArchivePageResponse {
  Page data = 1;
}

// -----------------------------
// SITE
// -----------------------------

message CreateSiteRequest {
  string name = 1;
  string ownerId = 2;
  string requestedUserId = 3;
  optional string logoUrl = 4;
  optional string faviconUrl = 5;
}

message CreateSiteResponse {
  Site data = 1;
}

message UpdateSiteRequest {
  string requestedUserId = 1;
  string siteId = 2;
  optional string name = 3;
}

message UpdateSiteResponse {
  Site data = 1;
}

message GetSiteRequest {
  string siteId = 1;
}

message GetSiteResponse {
  Site data = 1;
}

message GetSiteListRequest {
  string ownerId = 1;
}

message GetSiteListResponse {
  repeated Site data = 1;
}

message SuspendSiteRequest {
  string requestedUserId = 1;
  string siteId = 2;
}

message SuspendSiteResponse {
  Site data = 1;
}

// -----------------------------
// SECTIONS
// -----------------------------

message GetPageSectionRequest {
  string sectionId = 1;
}

message GetPageSectionResponse {
  Section data = 1;
}

message GetPageSectionListRequest {
  string pageId = 1;
}

message GetPageSectionListResponse {
  repeated Section data = 1;
}

message CreateSectionRequest {
  string pageId = 3;
  string requestedUserId = 4;
  optional string head = 5;
}

message CreateSectionResponse {
  Section data = 1;
}

message UpdateSectionHeadRequest {
  string sectionId = 4;
  string requestedUserId = 5;
  string head = 6;
}

message UpdateSectionFormatRequest {
  string sectionId = 4;
  string requestedUserId = 5;
  SectionFormat format = 6;
}

message UpdateSectionResponse {
  Section data = 1;
}

message DeleteSectionRequest {
  string sectionId = 4;
  string requestedUserId = 5;
}

message DeleteSectionResponse {
  Section data = 1;
}
