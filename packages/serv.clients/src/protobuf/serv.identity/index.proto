syntax = "proto3";

package serv.identity;

import "google/protobuf/timestamp.proto";

service IdentityService {
    rpc Register(RegisterRequest) returns (RegisterResponse) {}
    rpc SendVerificationCode(SendVerificationCodeRequest) returns (Verification) {}
    rpc LoginWithVerification(LoginWithVerificationRequest) returns (LoginWithVerificationResponse) {}
    rpc Logout(LogoutRequest) returns (LogoutResponse) {}

    rpc VerifyEmail(VerifyEmailRequest) returns (VerifyEmailResponse) {}
    rpc VerifyPhone(VerifyPhoneRequest) returns (VerifyPhoneResponse) {}

    rpc FindAccount(FindAccountRequest) returns (Account) {}
    rpc UpdateAccount(UpdateAccountRequest) returns (UpdateAccountResponse) {}
    rpc AddEmailToAccount(AddEmailToAccountRequest) returns (Account) {}
    rpc AddPhoneToAccount(AddPhoneToAccountRequest) returns (Account) {}
    rpc RemoveEmailFromAccount(RemoveEmailFromAccountRequest) returns (Account) {}
    rpc RemovePhoneFromAccount(RemovePhoneFromAccountRequest) returns (Account) {}

    rpc CreateAccess(Account) returns (CreateAccessResponse) {}
    rpc DeleteRefreshToken(DeleteRefreshTokenRequest) returns (DeleteRefreshTokenResponse) {}
    rpc ProvisionAccessToken(ProvisionAccessTokenRequest) returns (ProvisionAccessTokenResponse) {}
    rpc DecodeAccessToken(DecodeAccessTokenRequest) returns (DecodeAccessTokenResponse) {}

    rpc ValidateVerification(ValidateVerificationRequest) returns (ValidateVerificationResponse) {}
}

enum VerificationChannel {
    EMAIL = 0;
    SMS = 1;
}

message AccessTokenAccountContent {
    string id = 1;
}

message AccessTokenOrContent {
    string id = 1;
    string role = 2;
}

message ValidateVerificationRequest {
    string verificationId = 1;
    string verificationCode = 2;
}

message ValidateVerificationResponse {
    bool isValid = 1;
}

message DecodeAccessTokenResponse {
    AccessTokenAccountContent account = 1;
    optional AccessTokenOrContent organization = 2;
}

message AddEmailToAccountRequest {
    string accountId = 1;
    string email = 2;
}

message AddPhoneToAccountRequest {
    string accountId = 1;
    string phone = 2;
}

message RemoveEmailFromAccountRequest {
    string accountId = 1;
    string emailId = 2;
}

message RemovePhoneFromAccountRequest {
    string accountId = 1;
    string phoneId = 2;
}

message VerifyPhoneRequest {
    string phone = 1;
    string verificationCode = 2;
    string accountId = 3;
}

message VerifyPhoneResponse {
    string verificationId = 1;
}

message SendVerificationCodeRequest {
    string destination = 1;
    VerificationChannel channel = 2;
}

message Verification {
    string id = 1;
    optional string owner = 2;
    google.protobuf.Timestamp expiresAt = 3;
}

message Token {
    string value = 1;
    google.protobuf.Timestamp expiresAt = 2;
}

message AccessToken {

}

message Email {
    string value = 2;
    bool isVerified = 4;
    bool isPrimary = 5;
    google.protobuf.Timestamp createdAt = 6;
    google.protobuf.Timestamp updatedAt = 7;
}

message Phone {
    string value = 2;
    bool isVerified = 4;
    bool isPrimary = 5;
    google.protobuf.Timestamp createdAt = 6;
    google.protobuf.Timestamp updatedAt = 7;
}

message Account {
    string id = 1;
    string displayName = 2;
    optional string firstName = 3;
    optional string lastName = 4;
    google.protobuf.Timestamp createdAt = 5;
    google.protobuf.Timestamp updatedAt = 6;
    repeated Email emails = 7;
    repeated Phone phones = 8;
}

message RegisterRequest {
    optional string displayName = 1;
    string email = 3;
    optional string phone = 4;
    optional string firstName = 5;
    optional string lastName = 6;
}

message RegisterResponse {
    Account account = 1;
    Token accessToken = 2;
    Token refreshToken = 3;
}

message DeleteResponse {
    bool success = 1;
}

message UpdateAccountRequest {
    string accountId = 1;
    optional string displayName = 2;
    optional string firstName = 3;
    optional string lastName = 4;
}

message UpdateAccountResponse {
    Account updatedAccount = 1;
}

message LoginWithVerificationResponse {
    Account account = 1;
    Token refreshToken = 2;
    Token accessToken = 3;
}

message LoginWithVerificationRequest {
    string verificationCode = 1;
    string verificationId = 2;
    string username = 3;
}

message LogoutRequest {
    optional string refreshToken = 1;
}

message LogoutResponse {
    bool success = 1;
}

message VerifyEmailRequest {
    string email = 1;
    string verificationCode = 2;
    string accountId = 3;
}

message VerifyEmailResponse {
    string verificationId = 1;
}

message FindAccountRequest {
  optional string accountId = 1;
  optional string email = 2;
  optional string phone = 3;
}

message CreateAccessResponse {
    Token refreshToken = 1;
    Token accessToken = 2;
}

message DeleteRefreshTokenRequest {
    string refreshToken = 1;
}

message DeleteRefreshTokenResponse {
    bool success = 1;
}

message DecodeAccessTokenRequest {
    string accessToken = 1;
}

message ProvisionAccessTokenRequest {
    string refreshToken = 1;
    optional string organization = 2;
}

message ProvisionAccessTokenResponse {
    Token accessToken = 1;
}
