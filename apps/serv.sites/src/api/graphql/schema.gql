# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @key(fields: String!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE

directive @extends on OBJECT | INTERFACE

directive @external on OBJECT | FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

directive @shareable on FIELD_DEFINITION | OBJECT

directive @link(url: String!, import: [link__Import]) on SCHEMA

directive @tag(name: String!) repeatable on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @inaccessible on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @override(from: String!) on FIELD_DEFINITION

type ElementArea {
  x: Float!
  y: Float!
  height: Float!
  width: Float!
  isVisible: Boolean!
}

type ElementText {
  id: String!
  type: ElementType!
  updatedBy: String!
  createdBy: String!
  group: String!
  desktop: ElementArea!
  tablet: ElementArea
  mobile: ElementArea
  createdAt: DateTime
  updatedAt: DateTime
  html: String!
  json: JSON!
}

enum ElementType {
  TEXT
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Page {
  id: String!
  title: String!
  description: String
  site: String
  status: String!
  isLoneTitle: Boolean
  createdBy: String!
  updatedBy: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  slug: String!
}

type PageUpdatedResponse {
  id: String!
  status: String!
}

type PageSectionFormat {
  rowsCount: Float!
  rowGap: Float!
  columnGap: Float!
}

type PageSection {
  id: String!
  format: PageSectionFormat!
  updatedBy: String!
  createdBy: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Site {
  id: String!
  name: String!
  createdBy: String!
  updatedBy: String!
  status: String!
  url: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type SiteUpdatedResponse {
  id: String!
  name: String!
  status: String!
  url: String!
}

type Query {
  siteByOwner: [Site!]!
  site(siteId: String!): Site!
  pagesBySite(siteId: String!): [Page!]!
  page(pageId: String!): Page!
  sectionsByPage(pageId: String!): [PageSection!]!
  section(sectionId: String!): PageSection!
  elementsByGroup(groupId: String!): [ElementUnion!]!
}

union ElementUnion = ElementText

type Mutation {
  createSite(name: String!): SiteUpdatedResponse!
  updateSite(siteId: String!, name: String): SiteUpdatedResponse!
  createPage(siteId: String!, title: String!): PageUpdatedResponse!
  deletePage(pageId: String!): PageUpdatedResponse!
  updatePage(pageId: String!, title: String, description: String, isLoneTitle: Boolean): PageUpdatedResponse!
  createSection(
    pageId: String!

    """Position"""
    index: Float
  ): PageSection!
  updateSectionFormat(sectionId: String!, pageId: String!, rowsCount: Float, rowGap: Float, columnGap: Float): PageSection!
  updateSectionIndex(sectionId: String!, pageId: String!, index: Float!): PageSection!
  deleteSection(sectionId: String!, pageId: String!): PageSection!
  cloneSection(sectionId: String!, pageId: String!): PageSection!

  """Add text element"""
  addTextElement(groupId: String!, html: String!, json: JSON!, desktop: ElementAreaArgs!, tablet: ElementAreaArgs, mobile: ElementAreaArgs): ElementText!

  """Update text element"""
  updateTextElement(elementId: String!, html: String, json: JSON, desktop: ElementAreaArgs, tablet: ElementAreaArgs, mobile: ElementAreaArgs): ElementText!
  deleteManyElements: [ElementUnion!]!
}

input ElementAreaArgs {
  x: Float!
  y: Float!
  height: Float!
  width: Float!
  isVisible: Boolean!
}

scalar link__Import