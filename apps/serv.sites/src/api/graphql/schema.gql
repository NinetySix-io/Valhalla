# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @key(fields: String!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE

directive @extends on OBJECT | INTERFACE

directive @external on OBJECT | FIELD_DEFINITION

directive @requires(fields: String!) on FIELD_DEFINITION

directive @provides(fields: String!) on FIELD_DEFINITION

directive @shareable on FIELD_DEFINITION | OBJECT

directive @link(url: String!, import: [link__Import]) on SCHEMA

directive @tag(name: String!) repeatable on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @inaccessible on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION

directive @override(from: String!) on FIELD_DEFINITION

"""Use to group multiple elements together"""
type ComponentSchema {
  """Date entity was created"""
  createdAt: DateTime!

  """Date entity was updated"""
  updatedAt: DateTime!

  """Identifier of the entity"""
  id: ID!

  """Edit status"""
  status: EditStatus!

  """Account ID"""
  createdBy: String!

  """Account ID"""
  updatedBy: String!

  """Component's name"""
  name: String!

  """Thumbnail URI"""
  thumbnailUrl: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum EditStatus {
  ACTIVE
  DRAFT
  ARCHIVED
}

type PageSchema {
  """Date entity was created"""
  createdAt: DateTime!

  """Date entity was updated"""
  updatedAt: DateTime!

  """Identifier of the entity"""
  id: ID!

  """Page url"""
  slug: String

  """Edit status"""
  status: EditStatus!

  """Page title"""
  title: String!

  """Whether the title should be independent or part of the title template"""
  isLoneTitle: Boolean

  """Page description"""
  description: String

  """Account ID of creator"""
  createdBy: String!

  """Account ID of updater"""
  updatedBy: String!
}

type DirectionalSchema {
  """Left side"""
  left: String

  """Right side"""
  right: String

  """Top side"""
  top: String

  """Bottom side"""
  bottom: String
}

type StyleSchema {
  """Padding"""
  padding: DirectionalSchema!

  """Margin"""
  margin: DirectionalSchema!

  """Border radius"""
  borderRadius: DirectionalSchema!
}

type SiteSchema {
  """Date entity was created"""
  createdAt: DateTime!

  """Date entity was updated"""
  updatedAt: DateTime!

  """Identifier of the entity"""
  id: ID!

  """Site name"""
  name: String!

  """Site status"""
  status: SiteStatus!

  """Site url"""
  url: String

  """Account ID of creator"""
  createdBy: String!

  """Account ID of last updater"""
  updatedBy: String!

  """Site owner"""
  ownBy: String!
}

enum SiteStatus {
  DEPLOYED
  PENDING
  SUSPENDED
}

type PageUpdatedResponse {
  """Identifier of the entity"""
  id: ID!

  """Edit status"""
  status: EditStatus!
}

type SiteUpdatedResponse {
  """Identifier of the entity"""
  id: ID!

  """Site status"""
  status: SiteStatus!
}

type Query {
  siteList: [SiteSchema!]!
  site(id: String!): SiteSchema!
  pageList(siteId: String!): [PageSchema!]!
  page(siteId: String!, id: String!): PageSchema!
  component(id: String!): ComponentSchema!
  componentList: [ComponentSchema!]!
  flatElementList(filter: PageContextInput!): [ElementUnion!]!
}

union ElementUnion = BoxElementSchema | TextElementSchema

type BoxElementSchema {
  """Date entity was created"""
  createdAt: DateTime!

  """Date entity was updated"""
  updatedAt: DateTime!

  """Identifier of the entity"""
  id: ID!

  """When is root, parent is not an element"""
  isRoot: Boolean

  """Parent of element"""
  parent: String!
  updatedBy: String!

  """Element type"""
  type: ElementType!

  """Element style"""
  style: StyleSchema

  """Positional"""
  after: String
  htmlType: HTMLType!
}

enum ElementType {
  Text
  Input
  Box
  Image
  Video
  Link
}

enum HTMLType {
  div
  button
}

type TextElementSchema {
  """Date entity was created"""
  createdAt: DateTime!

  """Date entity was updated"""
  updatedAt: DateTime!

  """Identifier of the entity"""
  id: ID!

  """When is root, parent is not an element"""
  isRoot: Boolean

  """Parent of element"""
  parent: String!
  updatedBy: String!

  """Element type"""
  type: ElementType!

  """Element style"""
  style: StyleSchema

  """Positional"""
  after: String

  """Text"""
  text: String!
}

input PageContextInput {
  """Site ID"""
  siteId: String!

  """Page ID"""
  pageId: String!
}

type Mutation {
  createSite(input: CreateSiteInput!): SiteUpdatedResponse!
  updateSite(input: UpdateSiteInput!, id: String!): SiteUpdatedResponse!
  createPage(siteId: String!, input: CreatePageInput!): PageUpdatedResponse!
  deletePage(siteId: String!, id: String!): PageUpdatedResponse!
  updatePage(siteId: String!, id: String!, input: UpdatePageInput!): PageUpdatedResponse!
  getOrCreateFirstPage(siteId: String!): PageSchema!
  createComponent(input: CreateComponentInput!): ComponentSchema!
  updateComponent(id: String!, input: UpdateComponentInput!): Boolean!
  deleteComponent(id: String!): Boolean!
  archiveComponent(id: String!): Boolean!
  deleteElement(input: DeleteElementInput!): Boolean!
  createBox(input: CreateBoxInput!): String!
  updateBox(input: UpdateBoxInput!): Boolean!
  createText(input: CreateTextInput!): String!
  updateText(input: UpdateTextInput!): Boolean!
}

input CreateSiteInput {
  """Site name"""
  name: String!
}

input UpdateSiteInput {
  """Site name"""
  name: String
}

input CreatePageInput {
  """Page title"""
  title: String!
}

input UpdatePageInput {
  """Page title"""
  title: String

  """Whether the title should be independent or part of the title template"""
  isLoneTitle: Boolean

  """Page description"""
  description: String
}

input CreateComponentInput {
  """Component's name"""
  name: String!
}

input UpdateComponentInput {
  """Component's name"""
  name: String
}

input DeleteElementInput {
  """Element context"""
  ctx: PageContextInput!
  style: StyleInput
  parent: String!

  """Element ID"""
  elementId: String!
}

input StyleInput {
  top: DirectionalInput
  bottom: DirectionalInput
  left: DirectionalInput
  right: DirectionalInput
}

input DirectionalInput {
  """Left side"""
  left: String

  """Right side"""
  right: String

  """Top side"""
  top: String

  """Bottom side"""
  bottom: String
}

input CreateBoxInput {
  """Element context"""
  ctx: PageContextInput!
  style: StyleInput
  parent: String!
  htmlType: HTMLType
}

input UpdateBoxInput {
  """Element context"""
  ctx: PageContextInput!
  style: StyleInput
  parent: String!

  """Element ID"""
  elementId: String!
  htmlType: HTMLType
}

input CreateTextInput {
  """Element context"""
  ctx: PageContextInput!
  style: StyleInput
  parent: String!

  """Text"""
  text: String!
}

input UpdateTextInput {
  """Element context"""
  ctx: PageContextInput!
  style: StyleInput
  parent: String!

  """Element ID"""
  elementId: String!

  """Text"""
  text: String
}

scalar link__Import